{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simis\\\\Desktop\\\\SaitynaiGit\\\\AutotekReact\\\\autotekreact\\\\src\\\\Lists\\\\GidaiList.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from 'react-dom';\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from './NavBar';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GidaiList() {\n  _s();\n\n  var _state$gidai;\n\n  const history = useHistory();\n  const token = localStorage.getItem('auth_token');\n\n  if (token == null) {\n    history.push('/prisijungimas');\n  }\n\n  const [state, setData] = useState({\n    gidai: null\n  });\n  const [simptomas, setSimptomai] = useState({\n    simptomai: null\n  });\n  const [problema, setProblemos] = useState({\n    problemos: null\n  });\n  const [mechanikai, setMechanikai] = useState({\n    mechanikai: null\n  });\n\n  const fetchData = async () => {\n    const api = await fetch(\"https://autotek.azurewebsites.net/api/gidai\", {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': 'Bearer' + token\n      })\n    });\n    setData({\n      gidai: await api.json()\n    });\n    const apis = await fetch(\"https://autotek.azurewebsites.net/api/simptomai\", {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': 'Bearer' + token\n      })\n    });\n    setSimptomai({\n      simptomai: await apis.json()\n    });\n    const apip = await fetch(\"https://autotek.azurewebsites.net/api/problemos\", {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': 'Bearer' + token\n      })\n    });\n    setProblemos({\n      problemos: await apip.json()\n    });\n    const apim = await fetch(\"https://autotek.azurewebsites.net/api/mechanikai\", {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': 'Bearer' + token\n      })\n    });\n    setMechanikai({\n      mechanikai: await apim.json()\n    });\n  };\n\n  const findProblema = id => {\n    var x = null;\n\n    if ((problema === null || problema === void 0 ? void 0 : problema.problemos) != null) {\n      problema === null || problema === void 0 ? void 0 : problema.problemos.forEach(element => {\n        if (element.id === id) {\n          x = element.aprasymas;\n        }\n      });\n      return x;\n    } else {\n      return 'id:' + id;\n    }\n  };\n\n  const findSimptoma = id => {\n    var x = null;\n\n    if ((simptomas === null || simptomas === void 0 ? void 0 : simptomas.simptomai) != null) {\n      simptomas === null || simptomas === void 0 ? void 0 : simptomas.simptomai.forEach(element => {\n        if (element.id === id) {\n          x = element.aprasymas;\n        }\n      });\n      return x;\n    } else {\n      return 'id:' + id;\n    }\n  };\n\n  const findMechanikas = id => {\n    var x = null;\n\n    if ((mechanikai === null || mechanikai === void 0 ? void 0 : mechanikai.mechanikai) != null) {\n      mechanikai === null || mechanikai === void 0 ? void 0 : mechanikai.mechanikai.forEach(element => {\n        if (element.id === id) {\n          x = element.name;\n        }\n      });\n      return x;\n    } else {\n      return 'id:' + id;\n    }\n  };\n\n  fetchData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: \"Gidai\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    \"borderWidth\": \"1px\",\n                    'borderColor': \"#aaaaaa\",\n                    'borderStyle': 'solid'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      \"borderWidth\": \"1px\",\n                      'borderColor': \"#aaaaaa\",\n                      'borderStyle': 'solid'\n                    },\n                    children: \"Simptomai\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      \"borderWidth\": \"1px\",\n                      'borderColor': \"#aaaaaa\",\n                      'borderStyle': 'solid'\n                    },\n                    children: \"Problema\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      \"borderWidth\": \"1px\",\n                      'borderColor': \"#aaaaaa\",\n                      'borderStyle': 'solid'\n                    },\n                    children: \"Sprendimas\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      \"borderWidth\": \"1px\",\n                      'borderColor': \"#aaaaaa\",\n                      'borderStyle': 'solid'\n                    },\n                    children: \"Mechanikas\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: state === null || state === void 0 ? void 0 : (_state$gidai = state.gidai) === null || _state$gidai === void 0 ? void 0 : _state$gidai.map(gidas => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      \"borderWidth\": \"1px\",\n                      'borderColor': \"#aaaaaa\",\n                      'borderStyle': 'solid'\n                    },\n                    children: findSimptoma(gidas === null || gidas === void 0 ? void 0 : gidas.simptomas_id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 42\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      \"borderWidth\": \"1px\",\n                      'borderColor': \"#aaaaaa\",\n                      'borderStyle': 'solid'\n                    },\n                    children: findProblema(gidas === null || gidas === void 0 ? void 0 : gidas.problema_id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 42\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      \"borderWidth\": \"1px\",\n                      'borderColor': \"#aaaaaa\",\n                      'borderStyle': 'solid'\n                    },\n                    children: gidas === null || gidas === void 0 ? void 0 : gidas.sprendimas\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      \"borderWidth\": \"1px\",\n                      'borderColor': \"#aaaaaa\",\n                      'borderStyle': 'solid'\n                    },\n                    children: findMechanikas(gidas === null || gidas === void 0 ? void 0 : gidas.mechanikas_id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 42\n                  }, this)]\n                }, gidas === null || gidas === void 0 ? void 0 : gidas.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GidaiList, \"4ZyL6+JZ8Jff+iKLFrJ6/mQhkjE=\", false, function () {\n  return [useHistory];\n});\n\n_c = GidaiList;\nexport default GidaiList;\n\nif (document.getElementById('gidaiList')) {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(GidaiList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 21\n  }, this), document.getElementById('gidaiList'));\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"GidaiList\");","map":{"version":3,"sources":["C:/Users/simis/Desktop/SaitynaiGit/AutotekReact/autotekreact/src/Lists/GidaiList.js"],"names":["ReactDOM","React","useState","useHistory","NavBar","GidaiList","history","token","localStorage","getItem","push","state","setData","gidai","simptomas","setSimptomai","simptomai","problema","setProblemos","problemos","mechanikai","setMechanikai","fetchData","api","fetch","method","headers","Headers","json","apis","apip","apim","findProblema","id","x","forEach","element","aprasymas","findSimptoma","findMechanikas","name","map","gidas","simptomas_id","problema_id","sprendimas","mechanikas_id","document","getElementById","render"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,YAAP;;;AAIA,SAASC,SAAT,GAAqB;AAAA;;AAAA;;AAEjB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;;AAEA,MAAGF,KAAK,IAAI,IAAZ,EAAiB;AACbD,IAAAA,OAAO,CAACI,IAAR,CAAa,gBAAb;AACH;;AAED,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBV,QAAQ,CAAC;AAC9BW,IAAAA,KAAK,EAAE;AADuB,GAAD,CAAjC;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC;AACvCc,IAAAA,SAAS,EAAE;AAD4B,GAAD,CAA1C;AAIA,QAAM,CAACC,QAAD,EAAWC,YAAX,IAA2BhB,QAAQ,CAAC;AACtCiB,IAAAA,SAAS,EAAE;AAD2B,GAAD,CAAzC;AAIA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC;AACzCkB,IAAAA,UAAU,EAAE;AAD6B,GAAD,CAA5C;;AAIA,QAAME,SAAS,GAAG,YAAY;AAC1B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAAD,EAA+C;AAClEC,MAAAA,MAAM,EAAE,KAD0D;AAElEC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,yBAAiB,WAAWpB;AADX,OAAZ;AAFyD,KAA/C,CAAvB;AAMAK,IAAAA,OAAO,CAAC;AACJC,MAAAA,KAAK,EAAE,MAAMU,GAAG,CAACK,IAAJ;AADT,KAAD,CAAP;AAIA,UAAMC,IAAI,GAAG,MAAML,KAAK,CAAC,iDAAD,EAAmD;AACvEC,MAAAA,MAAM,EAAE,KAD+D;AAEvEC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,yBAAiB,WAAWpB;AADX,OAAZ;AAF8D,KAAnD,CAAxB;AAMAQ,IAAAA,YAAY,CAAC;AACTC,MAAAA,SAAS,EAAE,MAAMa,IAAI,CAACD,IAAL;AADR,KAAD,CAAZ;AAIA,UAAME,IAAI,GAAG,MAAMN,KAAK,CAAC,iDAAD,EAAmD;AACvEC,MAAAA,MAAM,EAAE,KAD+D;AAEvEC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,yBAAiB,WAAWpB;AADX,OAAZ;AAF8D,KAAnD,CAAxB;AAMAW,IAAAA,YAAY,CAAC;AACTC,MAAAA,SAAS,EAAE,MAAMW,IAAI,CAACF,IAAL;AADR,KAAD,CAAZ;AAIA,UAAMG,IAAI,GAAG,MAAMP,KAAK,CAAC,kDAAD,EAAoD;AACxEC,MAAAA,MAAM,EAAE,KADgE;AAExEC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,yBAAiB,WAAWpB;AADX,OAAZ;AAF+D,KAApD,CAAxB;AAMAc,IAAAA,aAAa,CAAC;AACVD,MAAAA,UAAU,EAAE,MAAMW,IAAI,CAACH,IAAL;AADR,KAAD,CAAb;AAGH,GAxCD;;AA0CA,QAAMI,YAAY,GAAIC,EAAD,IAAQ;AACzB,QAAIC,CAAC,GAAG,IAAR;;AACA,QAAG,CAAAjB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,SAAV,KAAuB,IAA1B,EAA+B;AAC3BF,MAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,SAAV,CAAoBgB,OAApB,CAA4BC,OAAO,IAAI;AACnC,YAAGA,OAAO,CAACH,EAAR,KAAeA,EAAlB,EAAqB;AACjBC,UAAAA,CAAC,GAAGE,OAAO,CAACC,SAAZ;AACH;AACJ,OAJD;AAKA,aAAOH,CAAP;AACH,KAPD,MAQI;AACA,aAAO,QAAQD,EAAf;AACH;AACJ,GAbD;;AAcA,QAAMK,YAAY,GAAIL,EAAD,IAAQ;AACzB,QAAIC,CAAC,GAAG,IAAR;;AACA,QAAG,CAAApB,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,SAAX,KAAwB,IAA3B,EAAgC;AAC5BF,MAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,SAAX,CAAqBmB,OAArB,CAA6BC,OAAO,IAAI;AACpC,YAAGA,OAAO,CAACH,EAAR,KAAeA,EAAlB,EAAqB;AACjBC,UAAAA,CAAC,GAAGE,OAAO,CAACC,SAAZ;AACH;AACJ,OAJD;AAKA,aAAOH,CAAP;AACH,KAPD,MAQI;AACA,aAAO,QAAQD,EAAf;AACH;AACJ,GAbD;;AAeA,QAAMM,cAAc,GAAIN,EAAD,IAAQ;AAC3B,QAAIC,CAAC,GAAG,IAAR;;AACA,QAAG,CAAAd,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEA,UAAZ,KAA0B,IAA7B,EAAkC;AAC9BA,MAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEA,UAAZ,CAAuBe,OAAvB,CAA+BC,OAAO,IAAI;AACtC,YAAGA,OAAO,CAACH,EAAR,KAAeA,EAAlB,EAAqB;AACjBC,UAAAA,CAAC,GAAGE,OAAO,CAACI,IAAZ;AACH;AACJ,OAJD;AAKA,aAAON,CAAP;AACH,KAPD,MAQI;AACA,aAAO,QAAQD,EAAf;AACH;AACJ,GAbD;;AAeAX,EAAAA,SAAS;AAET,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,sCACA;AAAA,uCACA;AAAI,kBAAA,KAAK,EAAE;AAAC,mCAAc,KAAf;AAAsB,mCAAc,SAApC;AAA+C,mCAAc;AAA7D,mBAAX;AAAA,0CACY;AAAI,oBAAA,KAAK,EAAE;AAAC,qCAAc,KAAf;AAAsB,qCAAc,SAApC;AAA+C,qCAAc;AAA7D,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADZ,eAEY;AAAI,oBAAA,KAAK,EAAE;AAAC,qCAAc,KAAf;AAAsB,qCAAc,SAApC;AAA+C,qCAAc;AAA7D,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFZ,eAGY;AAAI,oBAAA,KAAK,EAAE;AAAC,qCAAc,KAAf;AAAsB,qCAAc,SAApC;AAA+C,qCAAc;AAA7D,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHZ,eAIY;AAAI,oBAAA,KAAK,EAAE;AAAC,qCAAc,KAAf;AAAsB,qCAAc,SAApC;AAA+C,qCAAc;AAA7D,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBADA,eAWI;AAAA,0BAEIX,KAFJ,aAEIA,KAFJ,uCAEIA,KAAK,CAAEE,KAFX,iDAEI,aAAc4B,GAAd,CAAkBC,KAAK,iBACnB;AAAA,0CACK;AAAI,oBAAA,KAAK,EAAE;AAAC,qCAAc,KAAf;AAAsB,qCAAc,SAApC;AAA+C,qCAAc;AAA7D,qBAAX;AAAA,8BAAmFJ,YAAY,CAACI,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEC,YAAR;AAA/F;AAAA;AAAA;AAAA;AAAA,0BADL,eAEK;AAAI,oBAAA,KAAK,EAAE;AAAC,qCAAc,KAAf;AAAsB,qCAAc,SAApC;AAA+C,qCAAc;AAA7D,qBAAX;AAAA,8BAAmFX,YAAY,CAACU,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEE,WAAR;AAA/F;AAAA;AAAA;AAAA;AAAA,0BAFL,eAGI;AAAI,oBAAA,KAAK,EAAE;AAAC,qCAAc,KAAf;AAAsB,qCAAc,SAApC;AAA+C,qCAAc;AAA7D,qBAAX;AAAA,8BAAmFF,KAAnF,aAAmFA,KAAnF,uBAAmFA,KAAK,CAAEG;AAA1F;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAIK;AAAI,oBAAA,KAAK,EAAE;AAAC,qCAAc,KAAf;AAAsB,qCAAc,SAApC;AAA+C,qCAAc;AAA7D,qBAAX;AAAA,8BAAmFN,cAAc,CAACG,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEI,aAAR;AAAjG;AAAA;AAAA;AAAA;AAAA,0BAJL;AAAA,mBAASJ,KAAT,aAASA,KAAT,uBAASA,KAAK,CAAET,EAAhB;AAAA;AAAA;AAAA;AAAA,wBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH;;GA1JQ5B,S;UAEWF,U;;;KAFXE,S;AA4JT,eAAeA,SAAf;;AAEA,IAAI0C,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAJ,EAA0C;AACtChD,EAAAA,QAAQ,CAACiD,MAAT,eAAgB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UAAhB,EAA+BF,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAA/B;AACH","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { useState} from \"react\";\nimport { useHistory} from \"react-router-dom\";\nimport NavBar from './NavBar';\nimport '../App.css'\n\n\n\nfunction GidaiList() {\n\n    const history = useHistory();\n    const token = localStorage.getItem('auth_token')\n\n    if(token == null){\n        history.push('/prisijungimas')\n    }\n\n    const [state, setData] = useState({\n        gidai: null\n    });\n\n    const [simptomas, setSimptomai] = useState({\n        simptomai: null\n    });\n\n    const [problema, setProblemos] = useState({\n        problemos: null\n    });\n\n    const [mechanikai, setMechanikai] = useState({\n        mechanikai: null\n    });\n\n    const fetchData = async () => {\n        const api = await fetch(\"https://autotek.azurewebsites.net/api/gidai\",{\n            method: 'get',\n            headers: new Headers({\n                'Authorization': 'Bearer' + token\n            })\n        });\n        setData({\n            gidai: await api.json(),\n        });\n\n        const apis = await fetch(\"https://autotek.azurewebsites.net/api/simptomai\",{\n            method: 'get',\n            headers: new Headers({\n                'Authorization': 'Bearer' + token\n            })\n        });\n        setSimptomai({\n            simptomai: await apis.json(),\n        });\n\n        const apip = await fetch(\"https://autotek.azurewebsites.net/api/problemos\",{\n            method: 'get',\n            headers: new Headers({\n                'Authorization': 'Bearer' + token\n            })\n        });\n        setProblemos({\n            problemos: await apip.json(),\n        });\n\n        const apim = await fetch(\"https://autotek.azurewebsites.net/api/mechanikai\",{\n            method: 'get',\n            headers: new Headers({\n                'Authorization': 'Bearer' + token\n            })\n        });\n        setMechanikai({\n            mechanikai: await apim.json(),\n        });\n    };\n\n    const findProblema = (id) => {\n        var x = null;\n        if(problema?.problemos != null){\n            problema?.problemos.forEach(element => {\n                if(element.id === id){\n                    x = element.aprasymas;\n                }\n            });\n            return x;\n        }\n        else{\n            return 'id:' + id;\n        }\n    }\n    const findSimptoma = (id) => {\n        var x = null;\n        if(simptomas?.simptomai != null){\n            simptomas?.simptomai.forEach(element => {\n                if(element.id === id){\n                    x = element.aprasymas;\n                }\n            });\n            return x;\n        }\n        else{\n            return 'id:' + id;\n        }\n    }\n\n    const findMechanikas = (id) => {\n        var x = null;\n        if(mechanikai?.mechanikai != null){\n            mechanikai?.mechanikai.forEach(element => {\n                if(element.id === id){\n                    x = element.name;\n                }\n            });\n            return x;\n        }\n        else{\n            return 'id:' + id;\n        }\n    }\n\n    fetchData();\n\n    return (\n        <div>\n            <NavBar />\n        <div className=\"container \">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-8\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">Gidai</div>\n                        <table>\n                        <thead>\n                        <tr style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}}>\n                                    <th style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}}>Simptomai</th>\n                                    <th style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}}>Problema</th>\n                                    <th style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}}>Sprendimas</th>\n                                    <th style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}}>Mechanikas</th>\n                                </tr>\n                                </thead>\n\n\n                            <tbody>\n                              {\n                                state?.gidai?.map(gidas => (\n                                    <tr key={gidas?.id}>\n                                        {<td style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}}>{findSimptoma(gidas?.simptomas_id)}</td>}\n                                        {<td style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}}>{findProblema(gidas?.problema_id)}</td>}\n                                        <td style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}}>{gidas?.sprendimas}</td>\n                                        {<td style={{\"borderWidth\":\"1px\", 'borderColor':\"#aaaaaa\", 'borderStyle':'solid'}}>{findMechanikas(gidas?.mechanikas_id)}</td>}\n\n\n\n                                </tr>\n                                ))\n                            }\n                            </tbody>\n                            </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n}\n\nexport default GidaiList;\n\nif (document.getElementById('gidaiList')) {\n    ReactDOM.render(<GidaiList />, document.getElementById('gidaiList'));\n}\n"]},"metadata":{},"sourceType":"module"}